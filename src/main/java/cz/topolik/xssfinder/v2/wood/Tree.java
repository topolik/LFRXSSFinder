package cz.topolik.xssfinder.v2.wood;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

/**
 * @author Tomas Polesovsky
 */
public class Tree implements Comparable<Tree> {
    private File root;
    private File continent;
    private String name;
    private List<String> growthRings = Collections.emptyList();

    public Tree(File root, File continent) {
        this.root = root;
        this.continent = continent;
        name = root.getAbsolutePath();
    }

    public void explore() {
        List<String> rings = new ArrayList<String>();
        try {
            Scanner ant = new Scanner(root);

            while (ant.hasNextLine()) {
                rings.add(ant.nextLine());
            }

            growthRings = Collections.unmodifiableList(rings);
        } catch (FileNotFoundException ex) {
            throw new AntException("Ant wasn't able to explore the tree: " + ex.getMessage(), ex);
        }
    }

    public File getRoot() {
        return root;
    }

    public String getName() {
        return name;
    }

    public List<String> getGrowthRings() {
        return growthRings;
    }

    public File getContinent() {
        return continent;
    }

    public String melt() {
        StringBuffer sb = new StringBuffer();
        for (String ring : growthRings) {
            sb.append(ring);
        }
        return sb.toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Tree)) return false;

        Tree tree = (Tree) o;

        if (!root.equals(tree.root)) return false;

        return true;
    }

    @Override
    public int hashCode() {
        return root.hashCode();
    }

    @Override
    public int compareTo(Tree o) {
        if (o == null) {
            return 1;
        }

        return o.root.compareTo(root);
    }

    /**
     * Regonize if it's a JSPs compiled into Java class using Jasper
     *
     * @return true when the file is a compiled JSP file
     */
    public boolean isLinden() {
        if (growthRings.size() == 0) {
            throw new AntException("Please let ants to explore the tree first!");
        }
        return growthRings.size() > 1 && growthRings.get(1).startsWith(" * Generated by the Jasper component of Apache Tomcat");
    }

    /**
     * Regonize if it's a Java file, not JSP
     *
     * @return true when the file is a Java file and is not compiled JSP
     */
    public boolean isBirch() {
        return name.endsWith(".java") && !isLinden();
    }

    /**
     * Regonize if it's a Java Taglib definition (.tld) file
     *
     * @return true when the file is a tld file
     */
    public boolean isChestnut() {
        return name.endsWith(".tld");
    }
}
